% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bivariate_plot.R
\name{rg_biv_cmat}
\alias{rg_biv_cmat}
\alias{rg_biv_get_legend}
\alias{rg_biv_create_raster}
\alias{rg_biv_plot_raster}
\title{Bivariate plotting of raster maps}
\source{
\url{#https://stackoverflow.com/questions/54144269/bivariate-choropleth-map-in-r}
}
\usage{
rg_biv_cmat(
  breaks,
  style = 1,
  upper.left = NULL,
  upper.right = NULL,
  lower.left = NULL,
  lower.right = NULL
)

rg_biv_get_legend(
  cmat,
  xlab = "",
  ylab = "",
  label.size = 12,
  label.color = "black"
)

rg_biv_create_raster(x, y, breaks)

rg_biv_plot_raster(
  bivraster,
  cmat,
  xlab = "",
  ylab = "",
  border = NULL,
  crs = "+init=epsg:4326",
  na.value = "transparent",
  legend.height = 0.25,
  legend.width = 0.25,
  legend.x = 0.75,
  legend.y = 0.2,
  limits = NULL
)
}
\arguments{
\item{breaks}{integer, number of breaks used to generate the bivariate color scale}

\item{style}{integer, number between 1 and 9 to select different predefined color combinations}

\item{upper.left}{string, upper left color}

\item{upper.right}{string, upper right color}

\item{lower.left}{string, lower left color}

\item{lower.right}{string, lower right color}

\item{cmat}{matrix, a matrix with hexcolor codes such as returned from the function \code{rg_biv_cmat}}

\item{xlab}{string, x-label of the legend}

\item{ylab}{string, y-label of the legend}

\item{label.size}{numeric, size of legend labels}

\item{label.color}{string, color of legend label}

\item{x}{raster layer, first layer for bivariate plot}

\item{y}{raster layer, second layer for bivariate plot}

\item{bivraster}{raster, the raster object returned from the function \code{rg_biv_create_raster}}

\item{border}{sf object, optionally plot an sf object as border around raster. Make sure the sf object has the same crs as the bivraster}

\item{crs}{string, specification of the coordinate system you want to plot the bivraster in. Per Default uses EPSG:4326}

\item{na.value}{string, color for NA values}

\item{legend.height}{numeric, height of legend}

\item{legend.width}{numeric, width of legend}

\item{legend.x}{numeric, relative x position of legend}

\item{limits}{optionally zoom in into plot using x and y limits via \link[ggplot2]{coord_sf}. Use the syntax limits = c(xmin, xmax, ymin, ymax).}

\item{legnend.y}{numeric, relative y position of legend}
}
\description{
These functions can be used to combine two raster layers in a bivariate plot. To generate a
bivariate plot, first a matrix with the color codes and a raster layer that is a combination of
the two layers that should be plotted have to be calculated. The function \code{rg_big_cmat} can be used
to generate the color matrix and the function \code{rg_biv_create_raster} to combine the two single
raster files. The outputs of these two functions are then used in the function \code{rg_biv_plot_raster}
to create the final plot. The function \code{rg_biv_get_legend} can optionally be used to inspect
the final legend and is used internally by the function \code{rg_biv_plot_raster} to create the legend
for the plot.
}
\section{Functions}{
\itemize{
\item \code{rg_biv_cmat}: Generate color matrix

\item \code{rg_biv_get_legend}: Generate legend from color matrix

\item \code{rg_biv_create_raster}: Combine both single raster files to bivariate raster

\item \code{rg_biv_plot_raster}: Create bivariate plot
}}

\examples{
breaks <- 3
cmat <- rg_biv_cmat(breaks, style = 1)
legend <- rg_biv_get_legend(cmat, xlab = 'Gain', ylab = 'Loss')
xy <- rg_biv_create_raster(raster(x), raster(y), breaks)
map <- rg_biv_plot_raster(xy, cmat, border = st_border_proj, xlab = 'Gain', ylab = 'Loss', limits = c(10.7, 12, 46.2, 46.8))
map
}
